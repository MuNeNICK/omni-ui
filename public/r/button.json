{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:component",
  "title": "Button",
  "description": "Button component.",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "@omni/utils",
    "@omni/font-mono"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/button.tsx",
      "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\n\nconst buttonVariants = cva(\n  \"relative inline-flex items-center justify-center gap-2 font-mono uppercase tracking-[0.28em] text-[11px] transition-[color,background,opacity,transform] duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring/40 focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:pointer-events-none disabled:opacity-40 isolate overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border border-foreground px-4 h-10 text-foreground transition-colors before:absolute before:inset-0 before:origin-left before:scale-x-0 before:rounded-[inherit] before:bg-foreground before:opacity-100 before:transition-transform before:duration-200 before:content-[''] hover:text-background hover:border-background hover:before:scale-x-100 active:text-background active:border-background active:before:scale-x-100\",\n        destructive:\n          \"border border-transparent bg-destructive/90 text-destructive-foreground px-4 h-10 before:hidden hover:bg-destructive active:bg-destructive focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-border/70 bg-background/30 px-4 h-10 text-foreground transition-colors hover:border-foreground hover:bg-foreground/10 active:border-foreground active:bg-foreground/10\",\n        secondary:\n          \"border border-transparent bg-muted/50 px-4 h-10 text-foreground/80 hover:bg-muted/70 hover:text-foreground active:bg-muted/70 active:text-foreground\",\n        ghost:\n          \"border border-transparent px-4 h-10 text-muted-foreground transition-colors hover:text-foreground hover:[text-shadow:0_0_14px_rgba(255,255,255,0.35)] active:text-foreground active:[text-shadow:0_0_14px_rgba(255,255,255,0.35)] focus-visible:text-foreground focus-visible:[text-shadow:0_0_16px_rgba(148,163,184,0.55)]\",\n        muted:\n          \"border border-border/60 bg-muted/40 px-3 h-9 text-muted-foreground transition-colors hover:text-foreground hover:border-border hover:bg-muted/60 active:text-foreground active:border-border active:bg-muted/60\",\n        link:\n          \"px-2 py-1 text-muted-foreground tracking-[0.3em] hover:text-foreground active:text-foreground after:absolute after:bottom-0 after:left-0 after:h-px after:w-full after:origin-left after:scale-x-0 after:bg-foreground after:transition-transform after:duration-200 after:ease-out after:content-[''] hover:after:scale-x-100 active:after:scale-x-100 focus-visible:after:scale-x-100\",\n      },\n      size: {\n        default: \"h-10 px-4\",\n        sm: \"h-9 px-3\",\n        lg: \"h-11 px-5\",\n        icon: \"size-10\",\n        \"icon-sm\": \"size-9\",\n        \"icon-lg\": \"size-12\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, children, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n\n    return (\n      <Comp\n        ref={ref}\n        className={cn(buttonVariants({ variant, size }), className)}\n        data-variant={variant}\n        {...props}\n      >\n        {asChild ? (\n          children\n        ) : (\n          <span className=\"relative z-10 tracking-[0.2em]\">{children}</span>\n        )}\n      </Comp>\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n",
      "type": "registry:component",
      "target": "components/ui/button.tsx"
    }
  ]
}