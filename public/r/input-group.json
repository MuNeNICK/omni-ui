{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input-group",
  "type": "registry:component",
  "title": "Input Group",
  "description": "Input Group component.",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "@omni/button",
    "@omni/utils",
    "@omni/font-mono",
    "@omni/glass-style"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/input-group.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { Button } from \"@/registry/new-york/ui/button\"\n\nfunction InputGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"input-group\"\n      role=\"group\"\n      className={cn(\n        \"group/input-group relative flex w-full min-w-0 items-stretch overflow-hidden\",\n        \"rounded-none border border-border/60 bg-muted/35 text-foreground shadow-[var(--glass-shadow-outline)] backdrop-blur-[6px]\",\n        \"transition-[border,background,color,box-shadow]\",\n        \"focus-within:border-foreground focus-within:shadow-[var(--glass-shadow-outline-strong)] focus-within:ring-2 focus-within:ring-ring/35 focus-within:ring-offset-2 focus-within:ring-offset-background\",\n        \"has-[>[data-align=block-start]]:flex-col has-[>[data-align=block-end]]:flex-col\",\n        \"has-[>[data-align=block-start]]:gap-1 has-[>[data-align=block-end]]:gap-1\",\n        \"data-[disabled=true]:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nconst inputGroupAddonVariants = cva(\n  \"flex items-center gap-2 bg-transparent text-[10px] font-mono uppercase tracking-[0.32em] text-muted-foreground/75\",\n  {\n    variants: {\n      align: {\n        \"inline-start\": \"order-first border-r border-border/60 px-3 py-2\",\n        \"inline-end\": \"order-last border-l border-border/60 px-3 py-2\",\n        \"block-start\":\n          \"order-first w-full border-b border-border/60 px-3 pb-2 pt-3\",\n        \"block-end\": \"order-last w-full border-t border-border/60 px-3 pt-2 pb-3\",\n      },\n    },\n    defaultVariants: {\n      align: \"inline-start\",\n    },\n  }\n)\n\nfunction InputGroupAddon({\n  className,\n  align = \"inline-start\",\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof inputGroupAddonVariants>) {\n  return (\n    <div\n      role=\"presentation\"\n      data-slot=\"input-group-addon\"\n      data-align={align}\n      className={cn(inputGroupAddonVariants({ align }), className)}\n      onClick={(event) => {\n        const target = event.target as HTMLElement\n        if (target.closest(\"button\")) return\n        const control = event.currentTarget.parentElement?.querySelector<HTMLElement>(\n          \"[data-slot=input-group-control]\"\n        )\n        control?.focus()\n      }}\n      {...props}\n    />\n  )\n}\n\nconst inputGroupButtonVariants = cva(\n  \"font-mono uppercase tracking-[0.28em] shadow-none transition-colors\",\n  {\n    variants: {\n      size: {\n        xs: \"h-8 px-3 text-[10px]\",\n        sm: \"h-9 px-3.5 text-[10px]\",\n        \"icon-xs\": \"size-8 p-0\",\n        \"icon-sm\": \"size-9 p-0\",\n      },\n    },\n    defaultVariants: {\n      size: \"xs\",\n    },\n  }\n)\n\nfunction InputGroupButton({\n  className,\n  type = \"button\",\n  size = \"xs\",\n  variant = \"ghost\",\n  ...props\n}: Omit<React.ComponentProps<typeof Button>, \"size\"> &\n  VariantProps<typeof inputGroupButtonVariants>) {\n  return (\n    <Button\n      type={type}\n      variant={variant}\n      className={cn(inputGroupButtonVariants({ size }), className)}\n      data-slot=\"input-group-button\"\n      {...props}\n    />\n  )\n}\n\nfunction InputGroupText({ className, ...props }: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"input-group-text\"\n      className={cn(\n        \"flex items-center gap-2 bg-transparent font-mono text-[10px] uppercase tracking-[0.32em] text-muted-foreground/70\",\n        \"[&>svg]:size-3.5 [&>svg]:opacity-70\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nconst controlBase =\n  \"data-slot=input-group-control flex-1 bg-transparent px-3 text-sm text-foreground/85 placeholder:text-muted-foreground/60 outline-none disabled:opacity-50\"\nconst controlFocus =\n  \"focus-visible:outline-none focus-visible:ring-0 focus-visible:text-foreground\"\nconst controlTransition = \"transition-[color,background,border,box-shadow]\"\nconst controlBorderReset = \"border-0 shadow-none rounded-none\"\nconst controlDisabled =\n  \"disabled:cursor-not-allowed group-data-[disabled=true]/input-group:cursor-not-allowed\"\nconst controlSpacing = \"min-h-10\"\n\nconst controlClasses = cn(\n  controlBase,\n  controlFocus,\n  controlTransition,\n  controlBorderReset,\n  controlDisabled,\n  controlSpacing\n)\n\nconst InputGroupInput = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type = \"text\", ...props }, ref) => (\n    <input\n      ref={ref}\n      type={type}\n      className={cn(controlClasses, className)}\n      {...props}\n    />\n  )\n)\nInputGroupInput.displayName = \"InputGroupInput\"\n\nconst InputGroupTextarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, rows = 3, ...props }, ref) => (\n  <textarea\n    ref={ref}\n    rows={rows}\n    className={cn(controlClasses, \"resize-none py-3 align-top\", className)}\n    {...props}\n  />\n))\nInputGroupTextarea.displayName = \"InputGroupTextarea\"\n\nexport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButton,\n  InputGroupText,\n  InputGroupInput,\n  InputGroupTextarea,\n}\n",
      "type": "registry:component",
      "target": "components/ui/input-group.tsx"
    }
  ]
}