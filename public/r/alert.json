{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "alert",
  "type": "registry:component",
  "title": "Alert",
  "description": "Alert component.",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "@omni/utils",
    "@omni/font-mono",
    "@omni/glass-style",
    "@omni/tone-style"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/alert.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { toneVarDefaults, toneVarOverrides } from \"@/registry/new-york/lib/tone\"\n\nconst alertVariants = cva(\n  [\n    toneVarDefaults,\n    \"group/alert relative grid w-full grid-cols-[auto_1fr] items-start gap-x-4 gap-y-3 overflow-hidden rounded-none border border-[color:var(--tone-border)] px-6 py-5 text-sm text-[color:var(--tone-body)] shadow-[var(--glass-shadow-outline)] backdrop-blur-[12px] transition-colors\",\n    \"before:absolute before:left-0 before:top-3 before:bottom-3 before:w-[3px] before:rounded-full before:bg-[color:var(--tone-bar)] before:content-['']\",\n    \"after:absolute after:inset-x-0 after:top-0 after:h-px after:bg-[image:var(--tone-gradient)] after:bg-no-repeat after:bg-[length:100%_100%] after:content-['']\",\n    \"[&>svg]:col-start-1 [&>svg]:row-span-2 [&>svg]:mt-1 [&>svg]:size-5 [&>svg]:rounded-full [&>svg]:border [&>svg]:border-[color:var(--tone-icon-border)] [&>svg]:bg-[color:var(--tone-icon-bg)] [&>svg]:p-1 [&>svg]:text-[color:var(--tone-icon-fg)]\",\n  ].join(\" \"),\n  {\n    variants: {\n      variant: {\n        default: toneVarOverrides.default,\n        info: toneVarOverrides.info,\n        success: toneVarOverrides.success,\n        warning: toneVarOverrides.warning,\n        destructive: toneVarOverrides.destructive,\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  const tone = variant ?? \"default\"\n\n  return (\n    <div\n      data-slot=\"alert\"\n      data-variant={tone}\n      role=\"alert\"\n      className={cn(alertVariants({ variant: tone }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 font-mono text-[10px] uppercase tracking-[0.32em] text-[color:var(--tone-title)]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"col-start-2 grid justify-items-start gap-2 text-left text-sm text-[color:var(--tone-description)] [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertActions({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-actions\"\n      className={cn(\n        \"col-start-2 flex flex-wrap items-center gap-2 pt-1 text-[10px] font-mono uppercase tracking-[0.32em] text-[color:var(--tone-title)]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertActions, AlertDescription, AlertTitle, alertVariants }\n",
      "type": "registry:component",
      "target": "components/ui/alert.tsx"
    }
  ]
}