{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-group",
  "type": "registry:component",
  "title": "Button Group",
  "description": "Button Group component.",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "@omni/separator",
    "@omni/utils",
    "@omni/font-mono",
    "@omni/glass-style"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/button-group.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { Separator } from \"@/components/ui/separator\"\n\nconst buttonGroupVariants = cva(\n  \"isolate inline-flex w-fit items-stretch overflow-hidden rounded-none border border-border/60 bg-muted/30 shadow-[var(--glass-shadow-outline)] backdrop-blur-[6px]\",\n  {\n    variants: {\n      orientation: {\n        horizontal: \"flex-row\",\n        vertical: \"flex-col\",\n      },\n    },\n    defaultVariants: {\n      orientation: \"horizontal\",\n    },\n  }\n)\n\nfunction ButtonGroup({\n  className,\n  orientation,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof buttonGroupVariants>) {\n  return (\n    <div\n      role=\"group\"\n      data-slot=\"button-group\"\n      data-orientation={orientation}\n      className={cn(buttonGroupVariants({ orientation }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction ButtonGroupText({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  asChild?: boolean\n}) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"button-group-text\"\n      className={cn(\n        \"flex min-h-10 items-center gap-3 bg-muted/40 px-4 py-2 font-mono text-[10px] uppercase tracking-[0.32em] text-muted-foreground/80\",\n        \"[&>svg]:size-3.5 [&>svg]:opacity-70\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction ButtonGroupSeparator({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"button-group-separator\"\n      orientation={orientation}\n      decorative\n      className={cn(\n        \"relative !m-0 bg-transparent\",\n        orientation === \"vertical\"\n          ? \"h-auto w-px\"\n          : \"h-px w-full\",\n        \"after:absolute after:inset-0 after:content-['']\",\n        orientation === \"vertical\"\n          ? \"after:bg-gradient-to-b after:from-transparent after:via-border/60 after:to-transparent\"\n          : \"after:bg-gradient-to-r after:from-transparent after:via-border/60 after:to-transparent\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  ButtonGroup,\n  ButtonGroupSeparator,\n  ButtonGroupText,\n  buttonGroupVariants,\n}\n",
      "type": "registry:component",
      "target": "components/ui/button-group.tsx"
    }
  ]
}