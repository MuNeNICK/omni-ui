{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sonner",
  "type": "registry:component",
  "title": "Sonner",
  "description": "Sonner component.",
  "dependencies": [
    "lucide-react",
    "sonner"
  ],
  "registryDependencies": [
    "@omni/utils",
    "@omni/font-mono",
    "@omni/glass-style",
    "@omni/tone-style",
    "@omni/theme-provider"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/sonner.tsx",
      "content": "\"use client\"\n\nimport type { CSSProperties } from \"react\"\n\nimport { useTheme } from \"@/registry/new-york/lib/theme-provider\"\nimport { CheckCheck, InfoIcon, TriangleAlert } from \"lucide-react\"\nimport { Toaster as Sonner, type ToasterProps } from \"sonner\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { toneVarDefaults, toneVarOverrides } from \"@/registry/new-york/lib/tone\"\n\nconst toastBaseClass = cn(\n  toneVarDefaults,\n  \"group/toast relative grid min-w-[20rem] max-w-[420px] grid-cols-[auto_1fr] items-start gap-x-4 gap-y-3 overflow-hidden rounded-none border border-[color:var(--tone-border)] px-6 py-5 text-sm text-[color:var(--tone-body)] shadow-[var(--glass-shadow-outline)] backdrop-blur-[12px] transition-colors\",\n  \"before:absolute before:left-0 before:top-3 before:bottom-3 before:w-[3px] before:rounded-full before:bg-[color:var(--tone-bar)] before:content-['']\",\n  \"after:absolute after:inset-x-0 after:top-0 after:h-px after:bg-[image:var(--tone-gradient)] after:bg-no-repeat after:bg-[length:100%_100%] after:content-['']\"\n)\n\nconst toastVariants = {\n  default: toneVarOverrides.default,\n  info: toneVarOverrides.info,\n  success: toneVarOverrides.success,\n  warning: toneVarOverrides.warning,\n  error: toneVarOverrides.destructive,\n  loading: toneVarOverrides.default,\n  action: toneVarOverrides.default,\n  normal: toneVarOverrides.default,\n} satisfies Record<string, string>\n\nconst toastContentClass = cn(\n  \"col-start-2 grid justify-items-start gap-2 text-left\"\n)\n\nconst toastTitleClass = cn(\n  \"col-start-2 font-mono text-[10px] uppercase tracking-[0.32em] text-[color:var(--tone-title)]\"\n)\n\nconst toastDescriptionClass = cn(\n  \"col-start-2 grid justify-items-start gap-2 text-left text-sm text-[color:var(--tone-description)] [&_p]:leading-relaxed\"\n)\n\nconst toastIconClass = cn(\n  \"col-start-1 row-span-2 mt-1 flex size-5 items-center justify-center rounded-full border border-[color:var(--tone-icon-border)] bg-[color:var(--tone-icon-bg)] p-1 text-[color:var(--tone-icon-fg)]\"\n)\n\nconst toastCloseButtonClass = cn(\n  \"text-muted-foreground/70 transition-colors hover:text-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring\"\n)\n\nconst toastCancelButtonClass = cn(\n  \"rounded-none border border-border/60 bg-muted/40 px-2 py-1 font-mono text-[10px] uppercase tracking-[0.28em] text-muted-foreground/70 transition-colors hover:border-foreground/60 hover:text-foreground\"\n)\n\nconst toastActionButtonClass = cn(\n  \"rounded-none border border-foreground bg-foreground px-2 py-1 font-mono text-[10px] uppercase tracking-[0.28em] text-background transition-colors hover:bg-foreground/90\"\n)\n\nconst toastToneCSS = `\n[data-sonner-toaster] [data-sonner-toast][data-type] [data-description] {\n  color: var(--tone-description);\n}\n[data-sonner-toaster] [data-sonner-toast][data-type] [data-title] {\n  color: var(--tone-title);\n}\n`\n\nconst toastIcons = {\n  success: <CheckCheck className=\"size-3.5\" />,\n  info: <InfoIcon className=\"size-3.5\" />,\n  warning: <TriangleAlert className=\"size-3.5\" />,\n  error: <TriangleAlert className=\"size-3.5\" />,\n} satisfies NonNullable<ToasterProps[\"icons\"]>\n\nconst toasterStyle = {\n  \"--normal-bg\": \"var(--popover)\",\n  \"--normal-text\": \"var(--popover-foreground)\",\n  \"--normal-border\": \"var(--border)\",\n} as CSSProperties\n\nconst Toaster = ({ toastOptions, icons, ...props }: ToasterProps) => {\n  const { theme } = useTheme()\n\n  const {\n    className: userClassName,\n    descriptionClassName: userDescriptionClassName,\n    classNames: userClassNames = {},\n    ...restToastOptions\n  } = toastOptions ?? {}\n\n  const mergedIcons = {\n    ...toastIcons,\n    ...icons,\n  }\n\n  return (\n    <>\n      <style>{toastToneCSS}</style>\n      <Sonner\n        theme={(theme ?? \"system\") as ToasterProps[\"theme\"]}\n        className=\"toaster group\"\n        style={toasterStyle}\n        icons={mergedIcons}\n        toastOptions={{\n          ...restToastOptions,\n          unstyled: true,\n          className: cn(toastBaseClass, userClassName),\n          descriptionClassName: cn(\n            toastDescriptionClass,\n            userDescriptionClassName\n          ),\n          classNames: ({\n            ...userClassNames,\n            content: cn(toastContentClass, userClassNames.content),\n            title: cn(toastTitleClass, userClassNames.title),\n            icon: cn(toastIconClass, userClassNames.icon),\n            closeButton: cn(toastCloseButtonClass, userClassNames.closeButton),\n            cancelButton: cn(toastCancelButtonClass, userClassNames.cancelButton),\n            actionButton: cn(toastActionButtonClass, userClassNames.actionButton),\n            default: cn(toastVariants.default, userClassNames.default),\n            info: cn(toastVariants.info, userClassNames.info),\n            success: cn(toastVariants.success, userClassNames.success),\n            warning: cn(toastVariants.warning, userClassNames.warning),\n            error: cn(toastVariants.error, userClassNames.error),\n            loading: cn(toastVariants.loading, userClassNames.loading),\n          }),\n        }}\n        {...props}\n      />\n    </>\n  )\n}\n\nexport { Toaster }\n",
      "type": "registry:component",
      "target": "components/ui/sonner.tsx"
    }
  ]
}